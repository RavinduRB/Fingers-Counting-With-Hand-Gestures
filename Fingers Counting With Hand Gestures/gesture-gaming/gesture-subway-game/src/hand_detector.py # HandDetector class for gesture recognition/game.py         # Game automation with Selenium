import cv2
import mediapipe as mp

class HandDetector:
    def __init__(self):
        self.mp_hands = mp.solutions.hands
        self.hands = self.mp_hands.Hands(
            static_image_mode=False,
            max_num_hands=1,
            min_detection_confidence=0.7
        )
        self.mp_draw = mp.solutions.drawing_utils

    def find_hands(self, img, draw=True):
        img_rgb = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
        self.results = self.hands.process(img_rgb)
        
        if self.results.multi_hand_landmarks:
            for hand_landmarks in self.results.multi_hand_landmarks:
                if draw:
                    self.mp_draw.draw_landmarks(
                        img, hand_landmarks, self.mp_hands.HAND_CONNECTIONS
                    )
        return img

    def count_fingers(self):
        fingers = 0
        if self.results.multi_hand_landmarks:
            hand = self.results.multi_hand_landmarks[0]
            tips = [8, 12, 16, 20]  # finger tip ids
            
            # Thumb
            if hand.landmark[4].y < hand.landmark[3].y:
                fingers += 1
                
            # Other fingers
            for tip in tips:
                if hand.landmark[tip].y < hand.landmark[tip-2].y:
                    fingers += 1
        return fingers